from aiogram import Router, F, types
from aiogram.filters import StateFilter
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from sqlalchemy.ext.asyncio import AsyncSession
from filters.chat_types import ChatTypeFilter
from filters.is_admin import IsAdminMsg
from database.orm_query import orm_add_price, orm_get_prices, orm_delete_price, orm_add_document, orm_delete_document, \
    orm_get_documents
from keyboards.inline.inline_add_product import get_callback_btns, get_inlineMix_btns
from lexicon.lexicon import LEXICON_btn_main_admin_menu, LEXICON_btn_back_menu_links

admin_add_document_price_router = Router()
admin_add_document_price_router.message.filter(ChatTypeFilter(['private']), IsAdminMsg())
admin_add_document_price_router.callback_query.filter(IsAdminMsg())


class Add_price(StatesGroup):
    # –®–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    name = State()
    price = State()

    texts = {
        'Add_price:name': '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–π—Å–∞ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø—Ä–∞–π—Å—É –∑–∞–Ω–æ–≤–æ:',
        'Add_price:price': '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∞–π—Å –∑–∞–Ω–æ–≤–æ:',
    }


class Add_document(StatesGroup):
    # –®–∞–≥–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    name = State()
    document = State()

    texts = {
        'Add_document:name': '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É –∑–∞–Ω–æ–≤–æ:',
        'Add_document:document': '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∞–π—Å –∑–∞–Ω–æ–≤–æ:',
    }


@admin_add_document_price_router.callback_query(F.data == 'price_list')
async def admin_features(callback: types.CallbackQuery, session: AsyncSession):
    price_file = await orm_get_prices(session)
    if len(price_file) > 0:
        for pr in price_file:
            await callback.message.answer_document(document=pr.price, caption=f"{pr.name}", reply_markup=get_callback_btns(
                btns={
                    "–£–¥–∞–ª–∏—Ç—å": f"price_del_{pr.id}",
                    "–ê–¥–º–∏–Ω–∫–∞": f"admin",
                },
                sizes=(2,)
            ))
    else:
        await callback.message.answer(
            "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∞–π—Å–æ–≤.ü§î\n–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∞–π—Å—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å.üìù")


@admin_add_document_price_router.callback_query(F.data == 'valable_prices_list')
async def admin_features(callback: types.CallbackQuery, session: AsyncSession):
    price_file = await orm_get_prices(session)
    if len(price_file) > 0:
        for pr in price_file:
            await callback.message.answer_document(document=pr.price, caption=f"{pr.name}",
                                                   reply_markup=get_inlineMix_btns(btns=LEXICON_btn_back_menu_links, sizes=(1,)))
    else:
        await callback.message.answer(
            "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–∞–π—Å–æ–≤.ü§î\n–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∞–π—Å—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å.üìù")


@admin_add_document_price_router.callback_query(F.data.startswith("price_del_"))
async def delete_product_callback(callback: types.CallbackQuery, session: AsyncSession):
    product_id = callback.data.split("_")[-1]
    await orm_delete_price(session, int(product_id))
    await callback.answer("–ü—Ä–∞–π—Å —É–¥–∞–ª–µ–Ω")
    await callback.message.answer("–ü—Ä–∞–π—Å —É–¥–∞–ª–µ–Ω!")

# FSM:
# –°—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ name
@admin_add_document_price_router.callback_query(StateFilter(None), F.data == 'add_price')
# –°—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ name
async def add_product(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–π—Å–∞ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø—Ä–∞–π—Å—É.")
    await callback.message.delete()
    await state.set_state(Add_price.name)


# –•–µ–Ω–¥–ª–µ—Ä –æ—Ç–º–µ–Ω—ã –∏ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –∏–º–µ–Ω–Ω–æ —Ö–¥–µ—Å—å,
# –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤—Å—Ç–∞–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–º–µ—Ä 1 (—ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–∞—è –æ—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä–æ–≤)


# –õ–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ name –∏ –ø–æ—Ç–æ–º –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ price
@admin_add_document_price_router.message(Add_price.name, F.text)
async def add_name(message: types.Message, state: FSMContext):
    if 4 >= len(message.text) >= 150:
        await message.answer(
            "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–π—Å–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 150 —Å–∏–º–≤–æ–ª–æ–≤\n–∏–ª–∏ –±—ã—Ç—å –º–µ–Ω–µ–µ 5—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤. \n –í–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ"
        )
        return
    await state.update_data(name=message.text)
    await message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–∞–π—Å")
    await state.set_state(Add_price.price)

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ª–æ–≤–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –≤–≤–æ–¥–æ–≤ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è name
@admin_add_document_price_router.message(Add_price.name)
async def add_name2(message: types.Message, state: FSMContext):
    await message.answer("–í—ã –≤–≤–µ–ª–∏ –Ω–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–π—Å–∞!")


# –õ–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ price –∏ –ø–æ—Ç–æ–º –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π
@admin_add_document_price_router.message(Add_price.price, F.document)
async def add_document(message: types.Message, state: FSMContext, session: AsyncSession):

    if message.document:
        await state.update_data(price=message.document.file_id)
    else:
        await message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!")
        return
    data = await state.get_data()
    try:
        await orm_add_price(session, data)
        await message.answer("–ü—Ä–∞–π—Å –¥–æ–±–∞–≤–ª–µ–Ω", reply_markup=get_callback_btns(btns=LEXICON_btn_main_admin_menu, sizes=(2,)))
        await state.clear()

    except Exception as e:
        await message.answer(
            f"–û—à–∏–±–∫–∞: \n{str(e)}\n–û–±—Ä–∞—Ç–∏—Å—å –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ—Ä—É, –æ–Ω –æ–ø—è—Ç—å –¥–µ–Ω–µ–≥ —Ö–æ—á–µ—Ç",
            reply_markup=get_callback_btns(btns=LEXICON_btn_main_admin_menu, sizes=(2,)),
        )
        await state.clear()


# –õ–æ–≤–∏–º –≤—Å–µ –ø—Ä–æ—á–µ–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
@admin_add_document_price_router.message(Add_price.price)
async def add_image2(message: types.Message, state: FSMContext):
    await message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª.")


#################################### –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ######################################

@admin_add_document_price_router.callback_query(F.data == 'documents_list')
async def admin_features(callback: types.CallbackQuery, session: AsyncSession):
    document_file = await orm_get_documents(session)
    if len(document_file) > 0:
        for dc in document_file:
            await callback.message.answer_document(document=dc.document, caption=f"{dc.name}", reply_markup=get_callback_btns(
                btns={
                    "–£–¥–∞–ª–∏—Ç—å": f"document_del_{dc.id}",
                    "–ê–¥–º–∏–Ω–∫–∞": f"admin",
                },
                sizes=(2,)
            ))
    else:
        await callback.message.answer(
            "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.ü§î\n–î–æ–±–∞–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å.üìù")


@admin_add_document_price_router.callback_query(F.data == 'presentations_list')
async def admin_features(callback: types.CallbackQuery, session: AsyncSession):
    document_file = await orm_get_documents(session)
    if len(document_file) > 0:
        for dc in document_file:
            await callback.message.answer_document(document=dc.document, caption=f"{dc.name}", reply_markup=get_inlineMix_btns(btns=LEXICON_btn_back_menu_links, sizes=(1,)))
    else:
        await callback.message.answer(
            "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.ü§î\n–î–æ–±–∞–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ä—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å.üìù")


@admin_add_document_price_router.callback_query(F.data.startswith("document_del_"))
async def delete_product_callback(callback: types.CallbackQuery, session: AsyncSession):
    product_id = callback.data.split("_")[-1]
    await orm_delete_document(session, int(product_id))
    await callback.answer("–î–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω")
    await callback.message.answer("–î–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω!")

# FSM:
# –°—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ name
@admin_add_document_price_router.callback_query(StateFilter(None), F.data == 'add_docoment')
# –°—Ç–∞–Ω–æ–≤–∏–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ name
async def add_product(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É.")
    await callback.message.delete()
    await state.set_state(Add_document.name)


# –•–µ–Ω–¥–ª–µ—Ä –æ—Ç–º–µ–Ω—ã –∏ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –∏–º–µ–Ω–Ω–æ —Ö–¥–µ—Å—å,
# –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤—Å—Ç–∞–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–º–µ—Ä 1 (—ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–∞—è –æ—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä–æ–≤)


# –õ–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ name –∏ –ø–æ—Ç–æ–º –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ document
@admin_add_document_price_router.message(Add_document.name, F.text)
async def add_name(message: types.Message, state: FSMContext):
    if 4 >= len(message.text) >= 150:
        await message.answer(
            "–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 150 —Å–∏–º–≤–æ–ª–æ–≤\n–∏–ª–∏ –±—ã—Ç—å –º–µ–Ω–µ–µ 5—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤. \n –í–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ"
        )
        return
    await state.update_data(name=message.text)
    await message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç")
    await state.set_state(Add_document.document)

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ª–æ–≤–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –≤–≤–æ–¥–æ–≤ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è name
@admin_add_document_price_router.message(Add_document.name)
async def add_name2(message: types.Message, state: FSMContext):
    await message.answer("–í—ã –≤–≤–µ–ª–∏ –Ω–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞!")


# –õ–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ document –∏ –ø–æ—Ç–æ–º –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π
@admin_add_document_price_router.message(Add_document.document, F.document)
async def add_document(message: types.Message, state: FSMContext, session: AsyncSession):
    if message.document:
        await state.update_data(document=message.document.file_id)
    else:
        await message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!")
        return
    data = await state.get_data()
    try:
        await orm_add_document(session, data)
        await message.answer("–î–æ–∫—É–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω", reply_markup=get_callback_btns(btns=LEXICON_btn_main_admin_menu, sizes=(2,)))
        await state.clear()

    except Exception as e:
        await message.answer(
            f"–û—à–∏–±–∫–∞: \n{str(e)}\n–û–±—Ä–∞—Ç–∏—Å—å –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ—Ä—É, –æ–Ω –æ–ø—è—Ç—å –¥–µ–Ω–µ–≥ —Ö–æ—á–µ—Ç",
            reply_markup=get_callback_btns(btns=LEXICON_btn_main_admin_menu, sizes=(2,)),
        )
        await state.clear()


# –õ–æ–≤–∏–º –≤—Å–µ –ø—Ä–æ—á–µ–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
@admin_add_document_price_router.message(Add_document.document)
async def add_image2(message: types.Message, state: FSMContext):
    await message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª.")